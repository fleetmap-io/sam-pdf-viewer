# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-pdf-viewer

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

Globals:
  Api:
    Cors:
      AllowMethods: "'POST, GET, OPTIONS, PUT, DELETE'"
      AllowHeaders: "'Content-Type, authorization'"
      # For example, "'X-Forwarded-For'". Checkout [HTTP Spec](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) for more details on the value
      AllowOrigin: "'*'"
      # For example, "'www.example.com'". Checkout [HTTP Spec](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) for more details on this value.
      MaxAge: "'2'"

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - S3FullAccessPolicy:
            BucketName: !Ref AppBucket
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          BUCKET_NAME: !Ref AppBucket
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET

  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
        Handler: src/handlers/put-item.putItemHandler
        Runtime: nodejs16.x
        Architectures:
          - x86_64
        MemorySize: 128
        Timeout: 100
        Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
        Policies:
          # Give Create/Read/Update/Delete Permissions to the SampleTable
          - S3FullAccessPolicy:
              BucketName: !Ref AppBucket
        Environment:
          Variables:
            # Make table name accessible as environment variable from function code during execution
            BUCKET_NAME: !Ref AppBucket
        Events:
          Api:
            Type: Api
            Properties:
              Path: /{id}
              Method: POST
          ApiPut:
            Type: Api
            Properties:
              Path: /{id}
              Method: PUT

  AppBucket:
    Type: AWS::S3::Bucket
    Properties:
        BucketName: manager-mobile-s3-pdfs

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
